# --------------------------------------------------------------------------------
# Information
# --------------------------------------------------------------------------------

# Property files contain key/value pairs
# key = value
#
# Property keys may contain alphanumeric chars and colons, but
# not special chars. This way you can create pseudo-namespaces
#
# You can refer to values of other properties by enclosing their keys in "${}".
# Example: dir.js = ${dir.web}/js
#
# Everything behind the equal sign is the value, you do
# not have to enclose strings: text=This is some text, Your OS is ${php.os}

# --------------------------------------------------------------------------------
# Common, e.g. default environment
# --------------------------------------------------------------------------------

# Default environment
#
env = dev

# Install assets using symlinks
#
assets.installWithSymlink = true

# Clear cache with the "warmup" option
#
cache.clearWithWarmup = true

# --------------------------------------------------------------------------------
# Composer
# --------------------------------------------------------------------------------

composer.download_command = php -r "eval('?>'.file_get_contents('https://getcomposer.org/installer'));"

# Path to composer executable or composer.phar file
#
composer.path = composer.phar
#composer.path = /usr/local/bin/composer

# Path to php executable used by composer
#
composer.php = php

# Self update of the composer
#
composer.self-update = false

# Validate the composer.json file
#
composer.validate = false

# --------------------------------------------------------------------------------
# Directories
# --------------------------------------------------------------------------------

# System directories
#
dir.data = ${project.basedir}/data
dir.src = ${project.basedir}/src
dir.tests = ${project.basedir}/tests

# --------------------------------------------------------------------------------
# Build directories
# --------------------------------------------------------------------------------

dir.build = ${project.basedir}/build
dir.reports = ${dir.build}/logs
dir.reports.pdepend = ${dir.reports}/pdepend
dir.reports.coverage = ${dir.reports}/phpunit_coverage
#
# Disabled, because unnecessary right now
# phpdocumentor/phpdocumentor cannot be installed via Composer
#
# Krzysztof Niziol <krzysztof.niziol@meritoo.pl>
# 2017-02-22
#
#dir.docs = ${dir.build}/docs
#dir.docs.phpdoc2 = ${dir.docs}/phpdoc2

# --------------------------------------------------------------------------------
# Data directories
# --------------------------------------------------------------------------------

dir.data.tests = ${dir.data}/tests
dir.data.temporary = ${dir.data}/tmp

# --------------------------------------------------------------------------------
# Testing
# --------------------------------------------------------------------------------

# Test database path
#
tests.database = ${dir.data.temporary}/database.sqlite

#
# Disabled, because unnecessary right now
# PHPUnit is installed and loaded by Composer
#
# Krzysztof Niziol <krzysztof.niziol@meritoo.pl>
# 2017-02-22
#
# Run PHPUnit using exec task instead of phpunitTask
#phpunit.useExec = false

#
# Disabled, because unnecessary right now
# We want generate code coverage always
#
# Krzysztof Niziol <krzysztof.niziol@meritoo.pl>
# 2017-02-22
#
# Collect coverage data during tests
#phpunit.withCoverage = true

# Path of the PHPUnit (https://phpunit.de)
#
phpUnit.path = ./vendor/bin/phpunit

# Path of the PHP Coding Standards Fixer (http://cs.sensiolabs.org)
#
phpCsFixer.path = ./vendor/bin/php-cs-fixer
